//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MTarget
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservices.nti.com/", ConfigurationName="MTarget.WSApiSms")]
    public interface WSApiSms
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.nti.com/WSApiSms/pingRequest", ReplyAction="http://webservices.nti.com/WSApiSms/pingResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MTarget.pingResponse> pingAsync(MTarget.pingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.nti.com/WSApiSms/sendSMSRequest", ReplyAction="http://webservices.nti.com/WSApiSms/sendSMSResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MTarget.sendSMSResponse> sendSMSAsync(MTarget.sendSMSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.nti.com/WSApiSms/getDateRequest", ReplyAction="http://webservices.nti.com/WSApiSms/getDateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MTarget.getDateResponse> getDateAsync(MTarget.getDateRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ping", WrapperNamespace="http://webservices.nti.com/", IsWrapped=true)]
    public partial class pingRequest
    {
        
        public pingRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pingResponse", WrapperNamespace="http://webservices.nti.com/", IsWrapped=true)]
    public partial class pingResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public pingResponse()
        {
        }
        
        public pingResponse(string @return)
        {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.nti.com/")]
    public partial class mapEntry
    {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.nti.com/")]
    public partial class resultCommand
    {
        
        private string msisdnField;
        
        private string reasonField;
        
        private int resultcodeField;
        
        private string ticketField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string msisdn
        {
            get
            {
                return this.msisdnField;
            }
            set
            {
                this.msisdnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string reason
        {
            get
            {
                return this.reasonField;
            }
            set
            {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int resultcode
        {
            get
            {
                return this.resultcodeField;
            }
            set
            {
                this.resultcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string ticket
        {
            get
            {
                return this.ticketField;
            }
            set
            {
                this.ticketField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendSMS", WrapperNamespace="http://webservices.nti.com/", IsWrapped=true)]
    public partial class sendSMSRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("msisdns", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] msisdns;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string msgtext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("extended", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public MTarget.mapEntry[] extended;
        
        public sendSMSRequest()
        {
        }
        
        public sendSMSRequest(string username, string password, string[] msisdns, string msgtext, MTarget.mapEntry[] extended)
        {
            this.username = username;
            this.password = password;
            this.msisdns = msisdns;
            this.msgtext = msgtext;
            this.extended = extended;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendSMSResponse", WrapperNamespace="http://webservices.nti.com/", IsWrapped=true)]
    public partial class sendSMSResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public MTarget.resultCommand[] @return;
        
        public sendSMSResponse()
        {
        }
        
        public sendSMSResponse(MTarget.resultCommand[] @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDate", WrapperNamespace="http://webservices.nti.com/", IsWrapped=true)]
    public partial class getDateRequest
    {
        
        public getDateRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDateResponse", WrapperNamespace="http://webservices.nti.com/", IsWrapped=true)]
    public partial class getDateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.nti.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime @return;
        
        public getDateResponse()
        {
        }
        
        public getDateResponse(System.DateTime @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface WSApiSmsChannel : MTarget.WSApiSms, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class WSApiSmsClient : System.ServiceModel.ClientBase<MTarget.WSApiSms>, MTarget.WSApiSms
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WSApiSmsClient() : 
                base(WSApiSmsClient.GetDefaultBinding(), WSApiSmsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WSApiSmsPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSApiSmsClient(EndpointConfiguration endpointConfiguration) : 
                base(WSApiSmsClient.GetBindingForEndpoint(endpointConfiguration), WSApiSmsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSApiSmsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WSApiSmsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSApiSmsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WSApiSmsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSApiSmsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MTarget.pingResponse> MTarget.WSApiSms.pingAsync(MTarget.pingRequest request)
        {
            return base.Channel.pingAsync(request);
        }
        
        public System.Threading.Tasks.Task<MTarget.pingResponse> pingAsync()
        {
            MTarget.pingRequest inValue = new MTarget.pingRequest();
            return ((MTarget.WSApiSms)(this)).pingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MTarget.sendSMSResponse> MTarget.WSApiSms.sendSMSAsync(MTarget.sendSMSRequest request)
        {
            return base.Channel.sendSMSAsync(request);
        }
        
        public System.Threading.Tasks.Task<MTarget.sendSMSResponse> sendSMSAsync(string username, string password, string[] msisdns, string msgtext, MTarget.mapEntry[] extended)
        {
            MTarget.sendSMSRequest inValue = new MTarget.sendSMSRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.msisdns = msisdns;
            inValue.msgtext = msgtext;
            inValue.extended = extended;
            return ((MTarget.WSApiSms)(this)).sendSMSAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MTarget.getDateResponse> MTarget.WSApiSms.getDateAsync(MTarget.getDateRequest request)
        {
            return base.Channel.getDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<MTarget.getDateResponse> getDateAsync()
        {
            MTarget.getDateRequest inValue = new MTarget.getDateRequest();
            return ((MTarget.WSApiSms)(this)).getDateAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSApiSmsPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSApiSmsPort))
            {
                return new System.ServiceModel.EndpointAddress("http://api-public.mtarget.fr/SmsWebServices/WSApiSmsService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WSApiSmsClient.GetBindingForEndpoint(EndpointConfiguration.WSApiSmsPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WSApiSmsClient.GetEndpointAddress(EndpointConfiguration.WSApiSmsPort);
        }
        
        public enum EndpointConfiguration
        {
            
            WSApiSmsPort,
        }
    }
}
